const fs = require('fs');

const dirs = fs.readdirSync('exercises');
const exerciseDirs = dirs.slice(0, dirs.length - 1);

const exercises = exerciseDirs.map(exDir => {
    const number = Number(exDir.substring(0,2))
    const sectionName = exDir.substring(
      exDir.lastIndexOf("(") + 1,
      exDir.lastIndexOf(")")
    );
    let name = '';
    if (sectionName) {
        name = exDir.substring(2,  exDir.lastIndexOf("(")).split('-').join(' ');
    }
    else {
        name = exDir.substring(2, exDir.length).split('-').join(' ');
    }
    const path = `./exercises/${exDir}/exercise/App`
    const problemPath = `./exercises/${exDir}/problem.md`
    return { name, number, path, problemPath, sectionName }
})

function ident(level = 1) {
    const ident = '   ';

    let output = '';
    for(let i = 0; i < level; i++) {
        output += ident;
    }

    return output;
}


const output = `// This file is autogenerated -- run parseExercises.js to update
import * as React from 'react';
import { Route, withRouter } from 'react-router-dom';
import Home from "./Home";
import Exercise from "./components/Exercise";

// Import solutions
${exercises.map(e => `import Solution${e.number} from '${e.path}';`).join('\n')}

// Import problems
${exercises.map(e => `import problem${e.number} from '${e.problemPath}';`).join('\n')}


const ExerciseRoutes: React.FC = () => {
    return (
        <>
${ident(3)}<Route path="/" component={withRouter(Home)} exact />
${exercises.map(e => `${ident(3)}<Route path="/exercise/${e.number}" component={() => Exercise({ component: Solution${e.number}, problem: problem${e.number} })} />`).join('\n')}
        </>
    )
}

export default ExerciseRoutes;
`

fs.writeFileSync('./ExerciseRoutes.tsx', output);

const homeOutput = `// This file is autogenerated -- run parseExercises.js to update
import React from 'react';
import { RouteComponentProps } from "react-router-dom";
import styled from 'styled-components';

const Wrapper = styled.div\`
  max-width: 1000px;
  margin: auto;
  display: grid;
  grid-template-columns: 1fr 1fr 1fr 1fr;
  grid-column-gap: 25px;
  grid-row-gap: 25px;
\`;

const Exercise = styled.div\`
  padding: 10px;
  border-radius: 5px;
  box-shadow: 0 0 5px 5px rgba(204,204,204,0.24);
  transition: all 0.3s cubic-bezier(.25,.8,.25,1);
  display: flex;
  flex-direction: column;
  &:hover {
    cursor: pointer;
    box-shadow: 0 0 10px 10px rgba(204,204,204,0.33);
  }
\`;

const Title = styled.div\`
  grid-column: 1 / span 4;
  display: flex;
  font-weight: bold;
  font-size: 30px;
  border-bottom: 1px solid #eaeaea;
  margin-top: 10px;
\`;

const Number = styled.span\`
  font-size: 2rem;
  font-weight: 700;
\`;

const Home: React.FC<RouteComponentProps> = ({ history }) => {
    return (
        <Wrapper>
            ${exercises.map(e => `${e.sectionName ? `<Title>${e.sectionName}</Title>` : ``}
            <Exercise onClick={() => history.push("/exercise/${e.number}")}>
                <Number>${e.number}</Number>
                <div>${e.name}</div>
            </Exercise>`).join('\n')}
        </Wrapper>
    )
};

export default Home;
`;
fs.writeFileSync('./Home.tsx', homeOutput);

console.log(`Successfully generated ExerciseRoutes.tsx with ${exercises.length} exercises.`)
